//Given an integer array nums, find a 
subarray
 that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.

 

Example 1:

Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.


// If all elements +ve/(or it has even +ve) then entire array is product
//if there are odd negatives , omit 1 negative element and check its prefix max and suffix max product
// if any element is 0 ,omit it and check its prefix max and suffix max product


class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int prefix_prod=1;
        int suffix_prod=1;
        int prod=INT_MIN;
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            if(prefix_prod==0)
            prefix_prod=1;
            if(suffix_prod==0)
            suffix_prod=1;
            prefix_prod*=nums[i];
            suffix_prod*=nums[n-i-1];
            prod=max(prod,max(prefix_prod,suffix_prod));
        }
        return prod;
    }
};


