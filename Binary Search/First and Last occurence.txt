class Solution {
public:
     int firstOcc(vector<int>& arr,int n,int k)
{
    int s=0;
    int e=n-1;
    int mid=s+(e-s)/2;
    int ans=-1;
    while(s<=e)
    {
        if(arr[mid]==k)
        {
            ans=mid;
            e=mid-1;
        }
        else if(arr[mid]<k)
        {
            s=mid+1;
        }
        else
        {
            e=mid-1;
        }
        mid=s+(e-s)/2;
    }
    return ans;
}
int lastOcc(vector<int>& arr,int n,int k)
{
    int s=0;
    int e=n-1;
    int mid=s+(e-s)/2;
    int ans=-1;
    while(s<=e)
    {
        if(arr[mid]==k)
        {
            ans=mid;
            s=mid+1;
        }
        else if(arr[mid]<k)
        {
            s=mid+1;
        }
        else
        {
            e=mid-1;
        }
        mid=s+(e-s)/2;
    }
    return ans;
}
    vector<int> searchRange(vector<int>& nums, int target) {
        
        int n=nums.size();
        vector<int>ans;
        ans.push_back(firstOcc(nums,n,target));
         ans.push_back(lastOcc(nums,n,target));
         return ans;
    }
};