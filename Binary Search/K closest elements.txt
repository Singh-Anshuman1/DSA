//  Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order.

An integer a is closer to x than an integer b if:

|a - x| < |b - x|, or
|a - x| == |b - x| and a < b
 

Example 1:

Input: arr = [1,2,3,4,5], k = 4, x = 3
Output: [1,2,3,4]
Example 2:

Input: arr = [1,2,3,4,5], k = 4, x = -1
Output: [1,2,3,4]


class Solution {
public:
    vector<int> findClosestElements(vector<int>& arr, int k, int x) {
        vector<int>ans;
        int low=0;
        int high=arr.size()-1;
        int mid=low+(high-low)/2;
        while(low<=high)
        {
            if(arr[mid]==x)
            break;
            else if(arr[mid]<x)
            low=mid+1;
            else
            high=mid-1;
            mid=low+(high-low)/2;
        }
        int l=mid-1;
        int r=mid;
        while(l>=0 && r <arr.size() && k>0)
        {
            if(abs(arr[l]-x)<=abs(arr[r]-x))
            {
            ans.push_back(arr[l]);
            l--;
            k--;
            }
            else
            {
             ans.push_back(arr[r]);
            r++;  
            k--;
            }
        }
        while(k>0 && l>=0)
        {
        ans.push_back(arr[l]);
            l--;
            k--;
        }
        while(k>0 && r <arr.size())
        {
            ans.push_back(arr[r]);
            r++;
            k--;
        }
        sort(ans.begin(),ans.end());
        return ans;
        
    }
};